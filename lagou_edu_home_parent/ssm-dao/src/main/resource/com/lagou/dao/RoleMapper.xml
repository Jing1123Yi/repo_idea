<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.RoleMapper">

    <!-- 查询所有角色(条件) -->
    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">
        select * from roles
        <where>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!-- 根据角色id查询关联的菜单信息id -->
    <select id="findMenuByRoleId" resultType="int" parameterType="int">
        SELECT m.id
        FROM roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
		             INNER JOIN menu m ON m.id = rm.menu_id WHERE r.id = #{id}
    </select>

    <!-- 根据roleid删除在中间表与菜单的关联关系 -->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id = #{rid}
    </delete>

    <!-- 为角色分配菜单 -->
    <insert id="roleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!-- 删除角色 -->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{roleId}
    </delete>

    <!-- 添加角色 -->
    <insert id="saveRole" parameterType="com.lagou.domain.Role">
        insert into roles(
        id,
        name,
        code,
        description,
        created_time,
        updated_time,
        created_by,
        updated_by
        ) values(null,#{name},#{code},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!-- 修改角色 -->
    <update id="updateRole" parameterType="com.lagou.domain.Role">
        update roles
        <trim prefix="set" suffixOverrides=",">
            <if test="name !=null and name !=''">
                name = #{name},
            </if>
            <if test="code !=null and code !=''">
                code = #{code},
            </if>
            <if test="description !=null and description !=''">
                description = #{description},
            </if>
            <if test="updatedTime !=null">
                updated_time = #{updatedTime},
            </if>
        </trim>
        <where>
            <if test="id !=null and id !=''">id = #{id}</if>
        </where>
    </update>



























</mapper>